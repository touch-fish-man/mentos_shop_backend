# Generated by Django 3.2.18 on 2023-03-20 13:31

import django.contrib.auth.models
from django.db import migrations, models
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Code',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254)),
                ('code', models.CharField(max_length=6)),
                ('verify_id', models.CharField(max_length=100)),
                ('create_time', models.IntegerField()),
            ],
            options={
                'verbose_name': '邮箱验证码',
                'verbose_name_plural': '邮箱验证码',
                'db_table': 'code',
            },
        ),
        migrations.CreateModel(
            name='InviteCode',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='id')),
                ('code', models.CharField(max_length=100, unique=True, verbose_name='邀请码')),
                ('user_id', models.IntegerField(default=0, verbose_name='用户id')),
                ('invite_count', models.IntegerField(default=0, verbose_name='邀请人数')),
                ('invite_reward', models.IntegerField(default=0, verbose_name='邀请奖励')),
                ('create_time', models.DateTimeField(auto_now=True, verbose_name='创建时间')),
            ],
            options={
                'verbose_name': '邀请码',
                'verbose_name_plural': '邀请码',
                'db_table': 'invite_code',
            },
        ),
        migrations.CreateModel(
            name='InviteLog',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('user_id', models.IntegerField(verbose_name='用户id')),
                ('invite_user_id', models.IntegerField(verbose_name='邀请人id')),
                ('invite_code', models.CharField(max_length=100, verbose_name='邀请码')),
                ('used_time', models.DateTimeField(auto_now=True, verbose_name='使用时间')),
                ('create_time', models.DateTimeField(auto_now=True, verbose_name='创建时间')),
            ],
            options={
                'verbose_name': '邀请记录',
                'verbose_name_plural': '邀请记录',
                'db_table': 'invite_log',
            },
        ),
        migrations.CreateModel(
            name='RebateRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.PositiveIntegerField(default=1, verbose_name='返利人ID')),
                ('consumer_id', models.PositiveIntegerField(blank=True, null=True, verbose_name='消费者ID')),
                ('money', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True, verbose_name='金额')),
                ('create_time', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': '返利记录',
                'verbose_name_plural': '返利记录',
                'db_table': 'rebate_record',
                'ordering': ('-create_time',),
            },
        ),
        migrations.CreateModel(
            name='UserOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.PositiveIntegerField(db_index=True, verbose_name='用户ID')),
                ('status', models.SmallIntegerField(choices=[(0, 'created'), (1, 'paid'), (2, 'finished')], db_index=True, verbose_name='订单状态')),
                ('out_trade_no', models.CharField(db_index=True, max_length=64, unique=True, verbose_name='订单号')),
                ('qrcode_url', models.CharField(max_length=512, null=True, verbose_name='支付连接')),
                ('amount', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='金额')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='时间')),
                ('expired_at', models.DateTimeField(db_index=True, verbose_name='过期时间')),
            ],
            options={
                'verbose_name': '用户订单',
                'verbose_name_plural': '用户订单',
                'db_table': 'user_order',
                'index_together': {('user_id', 'status')},
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=100, unique=True, verbose_name='用户名')),
                ('email', models.EmailField(max_length=100, unique=True, verbose_name='邮箱')),
                ('password', models.CharField(max_length=100, verbose_name='密码')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否激活')),
                ('discord_id', models.CharField(max_length=100, null=True, unique=True, verbose_name='discord_id')),
                ('is_superuser', models.BooleanField(default=False, verbose_name='是否超级管理员')),
                ('level', models.IntegerField(default=0, verbose_name='等级')),
                ('points', models.IntegerField(default=0, verbose_name='积分')),
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False, help_text='用户唯一标识', null=True, unique=True, verbose_name='uid')),
                ('last_login', models.DateTimeField(auto_now=True)),
                ('invite_code', models.CharField(max_length=100, null=True, unique=True, verbose_name='邀请码')),
                ('invite_user_id', models.IntegerField(default=0)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
