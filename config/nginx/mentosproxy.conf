 upstream music {
        server 172.17.0.1:8090;
    }
server {
      # HTTP configuration
      listen 80;
      listen [::]:80;
      server_name coder.run-run.run;
    # HTTP to HTTPS
    if ($scheme != "https") {
        return 301 https://$host$request_uri;
      
    }
        # HTTPS configuration
    listen [::]:443 ssl ipv6only=on;
    listen 443 ssl;
    location / {
        proxy_pass  http://music; # Change this to your coder deployment port default is 3000
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection upgrade;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $http_x_forwarded_proto;
        add_header Strict-Transport-Security "max-age=15552000; includeSubDomains" always;
    }
      ssl_certificate "/etc/nginx/cert/run-run.fullchain.crt";
      ssl_certificate_key "/etc/nginx/cert/run-run.private.pem";
}

server {
        listen 80;
        listen [::]:80;
        server_name www.mentosproxy.com;
        # HTTP to HTTPS
        # if ($scheme != "https") {
        #     return 301 https://$host$request_uri;

        # }
      listen 443 ssl http2;
      listen [::]:443 ssl http2;
      ssl_certificate "/etc/nginx/cert/fullchain.crt";
      ssl_certificate_key "/etc/nginx/cert/private.key";
      location / {
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        root /opt/dist;
        index  index.html index.php index.htm;
    }
    location /api {
            proxy_pass http://177.8.0.11:8000/api;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            #proxy_set_header Upgrade $http_upgrade;
            #proxy_set_header Connection upgrade;
            proxy_set_header Accept-Encoding gzip;

    }
      location /static/ {
        proxy_pass http://177.8.0.11:8000/static/;
    }
        #禁止访问的文件或目录
        location ~ ^/(\.user.ini|\.htaccess|\.git|\.svn|\.project|LICENSE|README.md|.env)
        {
            return 404;
        }
}
server {
        listen 80;
        listen [::]:80;
        server_name test.mentosproxy.com;
        # HTTP to HTTPS
        # if ($scheme != "https") {
        #     return 301 https://$host$request_uri;

        # }
#       listen 443 ssl http2;
#       listen [::]:443 ssl http2;
#       ssl_certificate "/etc/nginx/cert/fullchain.crt";
#       ssl_certificate_key "/etc/nginx/cert/private.key";
      location / {
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        root /opt/dist;
        index  index.html index.php index.htm;
    }
    location /api {
            proxy_pass http://177.8.0.12:8000/api;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            #proxy_set_header Upgrade $http_upgrade;
            #proxy_set_header Connection upgrade;
            proxy_set_header Accept-Encoding gzip;

    }
      location /static/ {
        proxy_pass http://177.8.0.12:8000/static/;
    }
        #禁止访问的文件或目录
        location ~ ^/(\.user.ini|\.htaccess|\.git|\.svn|\.project|LICENSE|README.md|.env)
        {
            return 404;
        }
}
